{"title":"JanusGraph Index Problem","uid":"eca93a4fc619ef446eb6c515e09fb668","slug":"janusgraph-index-problem","date":"2020-06-14T06:00:00.000Z","updated":"2023-10-24T07:11:56.414Z","comments":true,"path":"api/articles/janusgraph-index-problem.json","keywords":null,"cover":"https://pic.nas.rodzrk.cn:28443/i/2023/10/24/653767f47d9d9.png","content":"<h1 id=\"JanusGraph索引问题整理\"><a href=\"#JanusGraph索引问题整理\" class=\"headerlink\" title=\"JanusGraph索引问题整理\"></a>JanusGraph索引问题整理</h1><h2 id=\"一-解决JanusGraph索引更新失败导致数据不一致的场景\"><a href=\"#一-解决JanusGraph索引更新失败导致数据不一致的场景\" class=\"headerlink\" title=\"一. 解决JanusGraph索引更新失败导致数据不一致的场景\"></a>一. 解决JanusGraph索引更新失败导致数据不一致的场景</h2><p style=\"text-indent: 2em\">JanusGraph\n虽然可以支持事务,但其原子性仅保证了更新存储后端时该事务是原子操作,当更新索引后端数据时可能存在失败的场景,此时若未出现其他问题,仅更新索引失败,则事务不会回滚.因此,可能导致索引后端和存储后端数据不一致的场景.</p>\n\n<span id=\"more\"></span>\n\n<h3 id=\"1-服务版本列表\"><a href=\"#1-服务版本列表\" class=\"headerlink\" title=\"1. 服务版本列表\"></a>1. 服务版本列表</h3><table>\n<thead>\n<tr>\n<th align=\"center\">服务名</th>\n<th align=\"center\">Version</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">JanusGraph</td>\n<td align=\"center\">0.4.x</td>\n</tr>\n<tr>\n<td align=\"center\">Cassandra</td>\n<td align=\"center\">3.11.x</td>\n</tr>\n<tr>\n<td align=\"center\">ElasticSearch</td>\n<td align=\"center\">5.6.x</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-JanusGraph索引操作非事务操作\"><a href=\"#2-JanusGraph索引操作非事务操作\" class=\"headerlink\" title=\"2. JanusGraph索引操作非事务操作\"></a>2. JanusGraph索引操作非事务操作</h3><p style=\"text-indent: 2em\">JanusGraph提交事务时,若索引操作失败,不会导致事务回滚,因此存在一定的数据不一致的风险,详见代码(Commit indexes部分,仅会打印索引操作的错误日志)</p>\n\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki github-light\" style=\"background-color: #f6f6f7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292E\">   </span><span style=\"color: #6A737D\">// StandardJanusGraph.java</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">   </span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">void</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">commit</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Collection</span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">InternalRelation</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> addedRelations,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                     </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Collection</span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">InternalRelation</span><span style=\"color: #D73A49\">&gt;</span><span style=\"color: #24292E\"> deletedRelations, </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> StandardJanusGraphTx tx) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (addedRelations.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> deletedRelations.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">()) </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">//1. Finalize transaction</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log.</span><span style=\"color: #6F42C1\">debug</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Saving transaction. Added &#123;&#125;, removed &#123;&#125;&quot;</span><span style=\"color: #24292E\">, addedRelations.</span><span style=\"color: #6F42C1\">size</span><span style=\"color: #24292E\">(), deletedRelations.</span><span style=\"color: #6F42C1\">size</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">hasCommitTime</span><span style=\"color: #24292E\">()) tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">setCommitTime</span><span style=\"color: #24292E\">(times.</span><span style=\"color: #6F42C1\">getTime</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Instant txTimestamp </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">getCommitTime</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">long</span><span style=\"color: #24292E\"> transactionId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> txCounter.</span><span style=\"color: #6F42C1\">incrementAndGet</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">//2. Assign JanusGraphVertex IDs</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">hasAssignIDsImmediately</span><span style=\"color: #24292E\">())</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            idAssigner.</span><span style=\"color: #6F42C1\">assignIDs</span><span style=\"color: #24292E\">(addedRelations);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">//3. Commit</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        BackendTransaction mutator </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> tx.</span><span style=\"color: #6F42C1\">getTxHandle</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">boolean</span><span style=\"color: #24292E\"> acquireLocks </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">hasAcquireLocks</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">boolean</span><span style=\"color: #24292E\"> hasTxIsolation </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> backend.</span><span style=\"color: #6F42C1\">getStoreFeatures</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">hasTxIsolation</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">boolean</span><span style=\"color: #24292E\"> logTransaction </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">hasLogTransactions</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">hasEnabledBatchLoading</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> KCVSLog txLog </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> logTransaction</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">backend.</span><span style=\"color: #6F42C1\">getSystemTxLog</span><span style=\"color: #24292E\">()</span><span style=\"color: #D73A49\">:</span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> TransactionLogHeader txLogHeader </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">TransactionLogHeader</span><span style=\"color: #24292E\">(transactionId,txTimestamp, times);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        ModificationSummary commitSummary;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">//3.1 Log transaction (write-ahead log) if enabled</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (logTransaction) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//[FAILURE] Inability to log transaction fails the transaction by escalation since it&#39;s likely due to unavailability of primary</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//storage backend.</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                Preconditions.</span><span style=\"color: #6F42C1\">checkNotNull</span><span style=\"color: #24292E\">(txLog, </span><span style=\"color: #032F62\">&quot;Transaction log is null&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                txLog.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(txLogHeader.</span><span style=\"color: #6F42C1\">serializeModifications</span><span style=\"color: #24292E\">(serializer, LogTxStatus.PRECOMMIT, tx, addedRelations, deletedRelations),txLogHeader.</span><span style=\"color: #6F42C1\">getLogKey</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">//3.2 Commit schema elements and their associated relations in a separate transaction if backend does not support</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">//    transactional isolation</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">boolean</span><span style=\"color: #24292E\"> hasSchemaElements </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">Iterables.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">(Iterables.</span><span style=\"color: #6F42C1\">filter</span><span style=\"color: #24292E\">(deletedRelations,SCHEMA_FILTER))</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">Iterables.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">(Iterables.</span><span style=\"color: #6F42C1\">filter</span><span style=\"color: #24292E\">(addedRelations,SCHEMA_FILTER));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            Preconditions.</span><span style=\"color: #6F42C1\">checkArgument</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">hasSchemaElements </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">hasEnabledBatchLoading</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> acquireLocks),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #032F62\">&quot;Attempting to create schema elements in inconsistent state&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (hasSchemaElements </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">hasTxIsolation) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">/*</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">                 * On storage without transactional isolation, create separate</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">                 * backend transaction for schema aspects to make sure that</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">                 * those are persisted prior to and independently of other</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">                 * mutations in the tx. If the storage supports transactional</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">                 * isolation, then don&#39;t create a separate tx.</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">                 */</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> BackendTransaction schemaMutator </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">openBackendTransaction</span><span style=\"color: #24292E\">(tx);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6A737D\">//[FAILURE] If the preparation throws an exception abort directly - nothing persisted since batch-loading cannot be enabled for schema elements</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    commitSummary </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">prepareCommit</span><span style=\"color: #24292E\">(addedRelations,deletedRelations, SCHEMA_FILTER, schemaMutator, tx, acquireLocks);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">assert</span><span style=\"color: #24292E\"> commitSummary.hasModifications </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">commitSummary.has2iModifications;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6A737D\">//Roll back schema tx and escalate exception</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    schemaMutator.</span><span style=\"color: #6F42C1\">rollback</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> e;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    schemaMutator.</span><span style=\"color: #6F42C1\">commit</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6A737D\">//[FAILURE] Primary persistence failed =&gt; abort and escalate exception, nothing should have been persisted</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Could not commit transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;] due to storage exception in system-commit&quot;</span><span style=\"color: #24292E\">,e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> e;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">//[FAILURE] Exceptions during preparation here cause the entire transaction to fail on transactional systems</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">//or just the non-system part on others. Nothing has been persisted unless batch-loading</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            commitSummary </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">prepareCommit</span><span style=\"color: #24292E\">(addedRelations,deletedRelations, hasTxIsolation</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\"> NO_FILTER </span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> NO_SCHEMA_FILTER, mutator, tx, acquireLocks);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (commitSummary.hasModifications) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                String logTxIdentifier </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> tx.</span><span style=\"color: #6F42C1\">getConfiguration</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">getLogIdentifier</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">boolean</span><span style=\"color: #24292E\"> hasSecondaryPersistence </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> logTxIdentifier</span><span style=\"color: #D73A49\">!=</span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> commitSummary.has2iModifications;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//1. Commit storage - failures lead to immediate abort</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//1a. Add success message to tx log which will be committed atomically with all transactional changes so that we can recover secondary failures</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//    This should not throw an exception since the mutations are just cached. If it does, it will be escalated since its critical</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (logTransaction) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    txLog.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(txLogHeader.</span><span style=\"color: #6F42C1\">serializePrimary</span><span style=\"color: #24292E\">(serializer,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                        hasSecondaryPersistence</span><span style=\"color: #D73A49\">?</span><span style=\"color: #24292E\">LogTxStatus.PRIMARY_SUCCESS</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\">LogTxStatus.COMPLETE_SUCCESS),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            txLogHeader.</span><span style=\"color: #6F42C1\">getLogKey</span><span style=\"color: #24292E\">(),mutator.</span><span style=\"color: #6F42C1\">getTxLogPersistor</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    mutator.</span><span style=\"color: #6F42C1\">commitStorage</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6A737D\">//[FAILURE] If primary storage persistence fails abort directly (only schema could have been persisted)</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Could not commit transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;] due to storage exception in commit&quot;</span><span style=\"color: #24292E\">,e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> e;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (hasSecondaryPersistence) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    LogTxStatus status </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> LogTxStatus.SECONDARY_SUCCESS;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    Map&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">,</span><span style=\"color: #D73A49\">Throwable</span><span style=\"color: #24292E\">&gt; indexFailures </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> ImmutableMap.</span><span style=\"color: #6F42C1\">of</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">boolean</span><span style=\"color: #24292E\"> userlogSuccess </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">true</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #6A737D\">//2. Commit indexes - [FAILURE] all exceptions are collected and logged but nothing is aborted</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        indexFailures </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> mutator.</span><span style=\"color: #6F42C1\">commitIndexes</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">indexFailures.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            status </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> LogTxStatus.SECONDARY_FAILURE;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (Map.Entry&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">,</span><span style=\"color: #D73A49\">Throwable</span><span style=\"color: #24292E\">&gt; entry </span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> indexFailures.</span><span style=\"color: #6F42C1\">entrySet</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Error while committing index mutations for transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;] on index: &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">entry.</span><span style=\"color: #6F42C1\">getKey</span><span style=\"color: #24292E\">(),entry.</span><span style=\"color: #6F42C1\">getValue</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #6A737D\">//3. Log transaction if configured - [FAILURE] is recorded but does not cause exception</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (logTxIdentifier</span><span style=\"color: #D73A49\">!=</span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                userlogSuccess </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">false</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Log userLog </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> backend.</span><span style=\"color: #6F42C1\">getUserLog</span><span style=\"color: #24292E\">(logTxIdentifier);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                Future&lt;</span><span style=\"color: #D73A49\">Message</span><span style=\"color: #24292E\">&gt; env </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> userLog.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(txLogHeader.</span><span style=\"color: #6F42C1\">serializeModifications</span><span style=\"color: #24292E\">(serializer, LogTxStatus.USER_LOG, tx, addedRelations, deletedRelations));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (env.</span><span style=\"color: #6F42C1\">isDone</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                        env.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (ExecutionException </span><span style=\"color: #E36209\">ex</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                        </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> ex.</span><span style=\"color: #6F42C1\">getCause</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                userlogSuccess</span><span style=\"color: #D73A49\">=</span><span style=\"color: #005CC5\">true</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                status </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> LogTxStatus.SECONDARY_FAILURE;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Could not user-log committed transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;] to &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> logTxIdentifier, e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    &#125; </span><span style=\"color: #D73A49\">finally</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (logTransaction) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #6A737D\">//[FAILURE] An exception here will be logged and not escalated; tx considered success and</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #6A737D\">// needs to be cleaned up later</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                txLog.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(txLogHeader.</span><span style=\"color: #6F42C1\">serializeSecondary</span><span style=\"color: #24292E\">(serializer,status,indexFailures,userlogSuccess),txLogHeader.</span><span style=\"color: #6F42C1\">getLogKey</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Could not tx-log secondary persistence status on transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;]&quot;</span><span style=\"color: #24292E\">,e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6A737D\">//This just closes the transaction since there are no modifications</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    mutator.</span><span style=\"color: #6F42C1\">commitIndexes</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> &#123; </span><span style=\"color: #6A737D\">//Just commit everything at once</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//[FAILURE] This case only happens when there are no non-system mutations in which case all changes</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//are already flushed. Hence, an exception here is unlikely and should abort</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                mutator.</span><span style=\"color: #6F42C1\">commit</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Could not commit transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;] due to exception&quot;</span><span style=\"color: #24292E\">,e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #6A737D\">//Clean up any left-over transaction handles</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                mutator.</span><span style=\"color: #6F42C1\">rollback</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (Throwable </span><span style=\"color: #E36209\">e2</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Could not roll-back transaction [&quot;</span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\">transactionId</span><span style=\"color: #D73A49\">+</span><span style=\"color: #032F62\">&quot;] after failure due to exception&quot;</span><span style=\"color: #24292E\">,e2);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (e </span><span style=\"color: #D73A49\">instanceof</span><span style=\"color: #24292E\"> RuntimeException) </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> (RuntimeException)e;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">JanusGraphException</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Unexpected exception&quot;</span><span style=\"color: #24292E\">,e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    &#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h3 id=\"3-索引操作执行失败的场景总结\"><a href=\"#3-索引操作执行失败的场景总结\" class=\"headerlink\" title=\"3. 索引操作执行失败的场景总结\"></a>3. 索引操作执行失败的场景总结</h3><h4 id=\"3-1-索引并发更新时锁冲突\"><a href=\"#3-1-索引并发更新时锁冲突\" class=\"headerlink\" title=\"3.1 索引并发更新时锁冲突\"></a>3.1 索引并发更新时锁冲突</h4><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki github-light\" style=\"background-color: #f6f6f7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292e\">154481719 [gremlin-server-exec-6] ERROR org.janusgraph.diskstorage.es.rest.RestElasticSearchClient  - Failed to execute ES query: &#123;type=version_conflict_engine_exception, reason=[byFuzzySearchMixedIndex][12jjc]: version conflict, current version [3] is different than the one provided [2], index_uuid=Zi4DOgwcT8WEjQu-bSJemw, shard=4, index=test__byfuzzysearchmixedindex&#125;</span></span></code></pre></div><p style=\"text-indent: 2em\">该场景的原理比较简单,主要是程序并发修改索引的某一文档时(此时不同请求获取的版本号一致),当其中一个请求修改成功后,版本号改变,其他请求修改时会首先判断版本号是否一致,若不一致,则该次请求失败.</p>\n\n<p style=\"text-indent: 2em\">以上场景最简单的解决方案就是重试,但老版本(目前0.5.x以前的版本应该都没有,只确认了一部分)的JanusGraph中Es\n的客户端实现中没有添加重试的配置,最快速的方法时升级JanusGraph版本至0.5.0以上</p>\n\n\n<p>es客户端重试配置的添加可见: <a href=\"https://github.com/JanusGraph/janusgraph/issues/1797\" title=\"\" target=\"\">issues#1797</a></p>\n<h4 id=\"3-2-es某时间段编译大量脚本报错\"><a href=\"#3-2-es某时间段编译大量脚本报错\" class=\"headerlink\" title=\"3.2 es某时间段编译大量脚本报错\"></a>3.2 es某时间段编译大量脚本报错</h4><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki github-light\" style=\"background-color: #f6f6f7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #24292e\">154481719 [gremlin-server-exec-6] ERROR org.janusgraph.diskstorage.es.ElasticSearchIndex  - Failed to execute bulk Elasticsearch mutation</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">java.io.IOException: Failure(s) in Elasicsearch bulk request: [&#123;type=illegal_argument_exception, reason=failed to execute script, caused_by=&#123;type=general_script_exception, reason=Failed to compile inline script [ctx._source.remove(&quot;*hidden:bp&quot;);ctx._source.remove(&quot;*hidden:bp__STRING&quot;);ctx._source.remove(&quot;*hidden:dp&quot;);ctx._source.remove(&quot;*hidden:dp__STRING&quot;);ctx._source.remove(&quot;*hidden:up&quot;);ctx._source.remove(&quot;*hidden:up__STRING&quot;);ctx._source.remove(&quot;*hidden:nc&quot;);ctx._source.remove(&quot;*hidden:nc__STRING&quot;);ctx._source.remove(&quot;*hidden:tu&quot;);ctx._source.remove(&quot;*hidden:tu__STRING&quot;);] using lang [painless], caused_by=&#123;type=circuit_breaking_exception, reason=[script] Too many dynamic script compilations within one minute, max: [15/min]; please use on-disk, indexed, or scripts with parameters instead; this limit can be changed by the [script.max_compilations_per_minute] setting, bytes_wanted=0, bytes_limit=0&#125;&#125;&#125;]</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.es.rest.RestElasticSearchClient.bulkRequest(RestElasticSearchClient.java:258)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.es.ElasticSearchIndex.mutate(ElasticSearchIndex.java:601)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.indexing.IndexTransaction$1.call(IndexTransaction.java:160)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.indexing.IndexTransaction$1.call(IndexTransaction.java:157)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.util.BackendOperation.executeDirect(BackendOperation.java:69)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.util.BackendOperation.execute(BackendOperation.java:55)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.indexing.IndexTransaction.flushInternal(IndexTransaction.java:157)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.indexing.IndexTransaction.commit(IndexTransaction.java:138)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.diskstorage.BackendTransaction.commitIndexes(BackendTransaction.java:141)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.graphdb.database.StandardJanusGraph.commit(StandardJanusGraph.java:765)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.graphdb.transaction.StandardJanusGraphTx.commit(StandardJanusGraphTx.java:1374)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.janusgraph.graphdb.tinkerpop.JanusGraphBlueprintsGraph$GraphTransaction.doCommit(JanusGraphBlueprintsGraph.java:272)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.apache.tinkerpop.gremlin.structure.util.AbstractTransaction.commit(AbstractTransaction.java:105)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.apache.tinkerpop.gremlin.structure.Transaction$commit$4.call(Unknown Source)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at Script27489.run(Script27489.groovy:1)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.apache.tinkerpop.gremlin.groovy.jsr223.GremlinGroovyScriptEngine.eval(GremlinGroovyScriptEngine.java:843)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.apache.tinkerpop.gremlin.groovy.jsr223.GremlinGroovyScriptEngine.eval(GremlinGroovyScriptEngine.java:548)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at javax.script.AbstractScriptEngine.eval(AbstractScriptEngine.java:233)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.apache.tinkerpop.gremlin.groovy.engine.ScriptEngines.eval(ScriptEngines.java:120)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at org.apache.tinkerpop.gremlin.groovy.engine.GremlinExecutor.lambda$eval$0(GremlinExecutor.java:290)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at java.util.concurrent.FutureTask.run(FutureTask.java:266)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at java.util.concurrent.FutureTask.run(FutureTask.java:266)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</span></span>\n<span class=\"line\"><span style=\"color: #24292e\">    at java.lang.Thread.run(Thread.java:748)</span></span></code></pre></div><p style=\"text-indent: 2em\">该错误主要由于某段时间编译了大量的脚本,导致触发了ES的保护机制,拒绝了部分脚本的编译请求.</p>\n<p style=\"text-indent: 2em\">最简单的解决方案就是调大限制,但是不可避免的会给ES集群造成压力,因此,不采用当前方案;另一种方案就是想办法从根本上解决大量脚本编译的问题.</p>\n<p style=\"text-indent: 2em\">在我们的使用场景下,通常在大量删除节点的属性(相关属性创建了MixedIndex索引)时会出现这个问题,对具体的场景进行分析发现,当我们在删除节点属性时,JanusGraph\n会向ES发送fields删除的脚本.首先,这部分脚本没有进行参数化;其次,JanusGraph\n构造脚本时,属性列表顺序并不是有序的,因此,虽然我们的使用场景中每次删除的都是不同节点上的相同属性,但可能每次执行删除操作时构造的脚本都不同,发送至ES后,ES每次都需重新编译,所以触发了这个问题.\n</p>\n<p style=\"text-indent: 2em\">在JanusGraph0.5.x版本后,修复了这个问题,删除Fields时,使用的是参数化的语句,且脚本已经提前提交至ES进行了编译.对于该问题的优化相关的解释可参考\n<a href=\"https://www.cnblogs.com/sanduzxcvbnm/p/12083590.html\" title=\"\" target=\"\">Elasticsearch Painless script编程</a>或<a href=\"https://blog.tommyyang.cn/2018/10/28/ElasticSearch%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84DynamicScript%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93-2018/\" title=\"\" target=\"\">ElasticSearch-DynamicScript使用总结</a></p>\n<p style=\"text-indent: 2em\">但是很可惜,我们的使用场景中无法升级JanusGraph版本至0.5.x,因为该版本以后JanusGraph不在支持ES5,我们的项目还不能升级ES\n版本,因此只能对之前的JanusGraph的代码进行修改.相关的修改如下:\n</p>\n<p style=\"text-indent: 2em\">思路(参考JanusGraph0.5.x版本中的修复方案):\n\n<ul>\n<li>服务启动时,尝试存储可参数化的脚本至ES集群中.</li>\n<li>使用脚本时,通过参数化的方式发送请求至ES集群,可以最有效的防止频繁进行脚本的编译.</li>\n</ul>\n</p>\n<p style=\"text-indent: 2em\">代码修改时主要关注ElasticSearchIndex即可(其他已省略),可通过该类逐步完成所有修改.</p>\n\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki github-light\" style=\"background-color: #f6f6f7\" tabindex=\"0\"><code><span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// 添加需要执行的脚本, ElasticSearchIndex.java</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">private</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">static</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> String PARAMETERIZED_DELETION_SCRIPT </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">parameterizedScriptPrepare</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;for (field in params.fields) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    if (field.cardinality == &#39;SINGLE&#39;) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;        ctx._source.remove(field.name);&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    &#125; else if (ctx._source.containsKey(field.name)) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;        def fieldIndex = ctx._source[field.name].indexOf(field.value);&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;        if (fieldIndex &gt;= 0 &amp;&amp; fieldIndex &lt; ctx._source[field.name].size()) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;            ctx._source[field.name].remove(fieldIndex);&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;        &#125;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    &#125;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;&#125;&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">private</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">static</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> String PARAMETERIZED_ADDITION_SCRIPT </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">parameterizedScriptPrepare</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;for (field in params.fields) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    if (ctx._source[field.name] == null) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;        ctx._source[field.name] = [];&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    &#125;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    if (field.cardinality != &#39;SET&#39; || ctx._source[field.name].indexOf(field.value) == -1) &#123;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;        ctx._source[field.name].add(field.value);&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;    &#125;&quot;</span><span style=\"color: #24292E\">,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #032F62\">&quot;&#125;&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">...</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// 构造方法是重点,此处会将painless脚本通过_script端点存储至ES集群中</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ElasticSearchIndex</span><span style=\"color: #24292E\">(Configuration config) throws BackendException &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        indexName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(INDEX_NAME);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        parameterizedAdditionScriptId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">generateScriptId</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;add&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        parameterizedDeletionScriptId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">generateScriptId</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;del&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        useAllField </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(USE_ALL_FIELD);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        useExternalMappings </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(USE_EXTERNAL_MAPPINGS);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        allowMappingUpdate </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(ALLOW_MAPPING_UPDATE);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        createSleep </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(CREATE_SLEEP);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        ingestPipelines </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">getSubset</span><span style=\"color: #24292E\">(ES_INGEST_PIPELINES);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> ElasticSearchSetup.Connection c </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">interfaceConfiguration</span><span style=\"color: #24292E\">(config);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        client </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> c.</span><span style=\"color: #6F42C1\">getClient</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        batchSize </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(INDEX_MAX_RESULT_SET_SIZE);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        log.</span><span style=\"color: #6F42C1\">debug</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Configured ES query nb result by query to &#123;&#125;&quot;</span><span style=\"color: #24292E\">, batchSize);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">switch</span><span style=\"color: #24292E\"> (client.</span><span style=\"color: #6F42C1\">getMajorVersion</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">case</span><span style=\"color: #24292E\"> FIVE</span><span style=\"color: #D73A49\">:</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                compat </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ES5Compat</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">break</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">case</span><span style=\"color: #24292E\"> SIX</span><span style=\"color: #D73A49\">:</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                compat </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ES6Compat</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">break</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">default:</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">PermanentBackendException</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Unsupported Elasticsearch version: &quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> client.</span><span style=\"color: #6F42C1\">getMajorVersion</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            client.</span><span style=\"color: #6F42C1\">clusterHealthRequest</span><span style=\"color: #24292E\">(config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(HEALTH_REQUEST_TIMEOUT));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> IOException </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">PermanentBackendException</span><span style=\"color: #24292E\">(e.</span><span style=\"color: #6F42C1\">getMessage</span><span style=\"color: #24292E\">(), e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">config.</span><span style=\"color: #6F42C1\">has</span><span style=\"color: #24292E\">(USE_DEPRECATED_MULTITYPE_INDEX) </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> client.</span><span style=\"color: #6F42C1\">isIndex</span><span style=\"color: #24292E\">(indexName)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #6A737D\">// upgrade scenario where multitype index was the default behavior</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            useMultitypeIndex </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">true</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            useMultitypeIndex </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> config.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(USE_DEPRECATED_MULTITYPE_INDEX);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            Preconditions.</span><span style=\"color: #6F42C1\">checkArgument</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">useMultitypeIndex </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">client.</span><span style=\"color: #6F42C1\">isAlias</span><span style=\"color: #24292E\">(indexName),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #032F62\">&quot;The key &#39;&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> USE_DEPRECATED_MULTITYPE_INDEX</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;&#39; cannot be true when existing index is split.&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            Preconditions.</span><span style=\"color: #6F42C1\">checkArgument</span><span style=\"color: #24292E\">(useMultitypeIndex </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">client.</span><span style=\"color: #6F42C1\">isIndex</span><span style=\"color: #24292E\">(indexName),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #032F62\">&quot;The key &#39;&quot;</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> USE_DEPRECATED_MULTITYPE_INDEX</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">+</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">&quot;&#39; cannot be false when existing index contains multiple types.&quot;</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        indexSetting </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> HashMap&lt;&gt;();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">        ElasticSearchSetup.</span><span style=\"color: #6F42C1\">applySettingsFromJanusGraphConf</span><span style=\"color: #24292E\">(indexSetting, config);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        indexSetting.</span><span style=\"color: #6F42C1\">put</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;index.max_result_window&quot;</span><span style=\"color: #24292E\">, Integer.MAX_VALUE);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6A737D\">// 通过该方法在服务启动时存储脚本,注意存储脚本时需要注意版本兼容性问题</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #6F42C1\">setupStoredScripts</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #6A737D\">// 该方法是执行请求的路口,在该方法中需要将原脚本修改为参数化脚本,防止触发ES保护机制</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    @</span><span style=\"color: #D73A49\">Override</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    </span><span style=\"color: #D73A49\">public</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">void</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">mutate</span><span style=\"color: #24292E\">(Map</span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">String, Map</span><span style=\"color: #D73A49\">&lt;</span><span style=\"color: #24292E\">String, IndexMutation</span><span style=\"color: #D73A49\">&gt;&gt;</span><span style=\"color: #24292E\"> mutations, KeyInformation.IndexRetriever information,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                       BaseTransaction tx) throws BackendException &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> List&lt;</span><span style=\"color: #D73A49\">ElasticSearchMutation</span><span style=\"color: #24292E\">&gt; requests </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ArrayList&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        </span><span style=\"color: #D73A49\">try</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Map.Entry&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, Map&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">IndexMutation</span><span style=\"color: #24292E\">&gt;&gt; stores </span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> mutations.</span><span style=\"color: #6F42C1\">entrySet</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> List&lt;</span><span style=\"color: #D73A49\">ElasticSearchMutation</span><span style=\"color: #24292E\">&gt; requestByStore </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> ArrayList&lt;&gt;();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> String storeName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> stores.</span><span style=\"color: #6F42C1\">getKey</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> String indexStoreName </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getIndexStoreName</span><span style=\"color: #24292E\">(storeName);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">for</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Map.Entry&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">IndexMutation</span><span style=\"color: #24292E\">&gt; entry </span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> stores.</span><span style=\"color: #6F42C1\">getValue</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">entrySet</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> String documentId </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> entry.</span><span style=\"color: #6F42C1\">getKey</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> IndexMutation mutation </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> entry.</span><span style=\"color: #6F42C1\">getValue</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">assert</span><span style=\"color: #24292E\"> mutation.</span><span style=\"color: #6F42C1\">isConsolidated</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    Preconditions.</span><span style=\"color: #6F42C1\">checkArgument</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">(mutation.</span><span style=\"color: #6F42C1\">isNew</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> mutation.</span><span style=\"color: #6F42C1\">isDeleted</span><span style=\"color: #24292E\">()));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    Preconditions.</span><span style=\"color: #6F42C1\">checkArgument</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">mutation.</span><span style=\"color: #6F42C1\">isNew</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">mutation.</span><span style=\"color: #6F42C1\">hasDeletions</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    Preconditions.</span><span style=\"color: #6F42C1\">checkArgument</span><span style=\"color: #24292E\">(</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">mutation.</span><span style=\"color: #6F42C1\">isDeleted</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">||</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">mutation.</span><span style=\"color: #6F42C1\">hasAdditions</span><span style=\"color: #24292E\">());</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #6A737D\">//Deletions first</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (mutation.</span><span style=\"color: #6F42C1\">hasDeletions</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (mutation.</span><span style=\"color: #6F42C1\">isDeleted</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            log.</span><span style=\"color: #6F42C1\">trace</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Deleting entire document &#123;&#125;&quot;</span><span style=\"color: #24292E\">, documentId);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            requestByStore.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(ElasticSearchMutation.</span><span style=\"color: #6F42C1\">createDeleteRequest</span><span style=\"color: #24292E\">(indexStoreName, storeName,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    documentId));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                            final String script = getDeletionScript(information, storeName, mutation);</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                            final Map&lt;String,Object&gt; doc = compat.prepareScript(script).build();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            List&lt;Map&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">Object</span><span style=\"color: #24292E\">&gt;&gt; params </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getParameters</span><span style=\"color: #24292E\">(information.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(storeName),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                mutation.</span><span style=\"color: #6F42C1\">getDeletions</span><span style=\"color: #24292E\">(), </span><span style=\"color: #005CC5\">true</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            Map doc </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> compat.</span><span style=\"color: #6F42C1\">prepareStoredScript</span><span style=\"color: #24292E\">(parameterizedDeletionScriptId, params).</span><span style=\"color: #6F42C1\">build</span><span style=\"color: #24292E\">();</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            log.</span><span style=\"color: #6F42C1\">trace</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Deletion script &#123;&#125; with params &#123;&#125;&quot;</span><span style=\"color: #24292E\">, PARAMETERIZED_DELETION_SCRIPT, params);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            requestByStore.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(ElasticSearchMutation.</span><span style=\"color: #6F42C1\">createUpdateRequest</span><span style=\"color: #24292E\">(indexStoreName, storeName,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    documentId, doc));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (mutation.</span><span style=\"color: #6F42C1\">hasAdditions</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (mutation.</span><span style=\"color: #6F42C1\">isNew</span><span style=\"color: #24292E\">()) &#123; </span><span style=\"color: #6A737D\">//Index</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            log.</span><span style=\"color: #6F42C1\">trace</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Adding entire document &#123;&#125;&quot;</span><span style=\"color: #24292E\">, documentId);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Map&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">Object</span><span style=\"color: #24292E\">&gt; source </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getNewDocument</span><span style=\"color: #24292E\">(mutation.</span><span style=\"color: #6F42C1\">getAdditions</span><span style=\"color: #24292E\">(),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    information.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(storeName));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            requestByStore.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(ElasticSearchMutation.</span><span style=\"color: #6F42C1\">createIndexRequest</span><span style=\"color: #24292E\">(indexStoreName, storeName,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    documentId, source));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Map upsert;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">mutation.</span><span style=\"color: #6F42C1\">hasDeletions</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                upsert </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getNewDocument</span><span style=\"color: #24292E\">(mutation.</span><span style=\"color: #6F42C1\">getAdditions</span><span style=\"color: #24292E\">(), information.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(storeName));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                upsert </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            List&lt;Map&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">Object</span><span style=\"color: #24292E\">&gt;&gt; params </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getParameters</span><span style=\"color: #24292E\">(information.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(storeName),</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                mutation.</span><span style=\"color: #6F42C1\">getAdditions</span><span style=\"color: #24292E\">(), </span><span style=\"color: #005CC5\">false</span><span style=\"color: #24292E\">, Cardinality.SINGLE);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">params.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                ImmutableMap.Builder builder </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> compat.</span><span style=\"color: #6F42C1\">prepareStoredScript</span><span style=\"color: #24292E\">(parameterizedAdditionScriptId, params);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                requestByStore.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(ElasticSearchMutation.</span><span style=\"color: #6F42C1\">createUpdateRequest</span><span style=\"color: #24292E\">(indexStoreName, storeName,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                    documentId, builder, upsert));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                log.</span><span style=\"color: #6F42C1\">trace</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Adding script &#123;&#125; with params &#123;&#125;&quot;</span><span style=\"color: #24292E\">, PARAMETERIZED_ADDITION_SCRIPT, params);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                            final String inline = getAdditionScript(information, storeName, mutation);</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                            if (!inline.isEmpty()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                                final ImmutableMap.Builder builder = compat.prepareScript(inline);</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                                requestByStore.add(ElasticSearchMutation.createUpdateRequest(indexStoreName, storeName,</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                                        documentId, builder, upsert));</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                                log.trace(&quot;Adding script &#123;&#125;&quot;, inline);</span></span>\n<span class=\"line\"><span style=\"color: #6A737D\">//                            &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Map&lt;</span><span style=\"color: #D73A49\">String</span><span style=\"color: #24292E\">, </span><span style=\"color: #D73A49\">Object</span><span style=\"color: #24292E\">&gt; doc </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">getAdditionDoc</span><span style=\"color: #24292E\">(information, storeName, mutation);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">doc.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                </span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> ImmutableMap.Builder builder </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> ImmutableMap.</span><span style=\"color: #6F42C1\">builder</span><span style=\"color: #24292E\">().</span><span style=\"color: #6F42C1\">put</span><span style=\"color: #24292E\">(ES_DOC_KEY, doc);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                requestByStore.</span><span style=\"color: #6F42C1\">add</span><span style=\"color: #24292E\">(ElasticSearchMutation.</span><span style=\"color: #6F42C1\">createUpdateRequest</span><span style=\"color: #24292E\">(indexStoreName, storeName,</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                        documentId, builder, upsert));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                                log.</span><span style=\"color: #6F42C1\">trace</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Adding update &#123;&#125;&quot;</span><span style=\"color: #24292E\">, doc);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">requestByStore.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">() </span><span style=\"color: #D73A49\">&amp;&amp;</span><span style=\"color: #24292E\"> ingestPipelines.</span><span style=\"color: #6F42C1\">containsKey</span><span style=\"color: #24292E\">(storeName)) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    client.</span><span style=\"color: #6F42C1\">bulkRequest</span><span style=\"color: #24292E\">(requestByStore, String.</span><span style=\"color: #6F42C1\">valueOf</span><span style=\"color: #24292E\">(ingestPipelines.</span><span style=\"color: #6F42C1\">get</span><span style=\"color: #24292E\">(storeName)));</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125; </span><span style=\"color: #D73A49\">else</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">requestByStore.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                    requests.</span><span style=\"color: #6F42C1\">addAll</span><span style=\"color: #24292E\">(requestByStore);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">if</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">!</span><span style=\"color: #24292E\">requests.</span><span style=\"color: #6F42C1\">isEmpty</span><span style=\"color: #24292E\">()) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">                client.</span><span style=\"color: #6F42C1\">bulkRequest</span><span style=\"color: #24292E\">(requests, </span><span style=\"color: #005CC5\">null</span><span style=\"color: #24292E\">);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125; </span><span style=\"color: #D73A49\">catch</span><span style=\"color: #24292E\"> (</span><span style=\"color: #D73A49\">final</span><span style=\"color: #24292E\"> Exception </span><span style=\"color: #E36209\">e</span><span style=\"color: #24292E\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            log.</span><span style=\"color: #6F42C1\">error</span><span style=\"color: #24292E\">(</span><span style=\"color: #032F62\">&quot;Failed to execute bulk Elasticsearch mutation&quot;</span><span style=\"color: #24292E\">, e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">            </span><span style=\"color: #D73A49\">throw</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">convert</span><span style=\"color: #24292E\">(e);</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">        &#125;</span></span>\n<span class=\"line\"><span style=\"color: #24292E\">    &#125;</span></span></code></pre></div><p>由于存储脚本的API在不同的版本中存在变化,因此需要对此部分做兼容处理,相关变化详见<a href=\"/post/elasticsearch-scripting-module.html\" title=\"elasticsearch scripting module\">elasticsearch scripting module</a></p>\n","text":"JanusGraph索引问题整理一. 解决JanusGraph索引更新失败导致数据不一致的场景JanusGraph 虽然可以支持事务,但其原子性仅保证了更新存储...","permalink":"/post/janusgraph-index-problem","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"janusgraph","slug":"janusgraph","count":1,"path":"api/categories/janusgraph.json"},{"name":"index","slug":"janusgraph/index","count":1,"path":"api/categories/janusgraph/index.json"}],"tags":[{"name":"janusgraph","slug":"janusgraph","count":1,"path":"api/tags/janusgraph.json"},{"name":"index","slug":"index","count":1,"path":"api/tags/index.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JanusGraph%E7%B4%A2%E5%BC%95%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86\"><span class=\"toc-text\">JanusGraph索引问题整理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E8%A7%A3%E5%86%B3JanusGraph%E7%B4%A2%E5%BC%95%E6%9B%B4%E6%96%B0%E5%A4%B1%E8%B4%A5%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">一. 解决JanusGraph索引更新失败导致数据不一致的场景</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9C%8D%E5%8A%A1%E7%89%88%E6%9C%AC%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">1. 服务版本列表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-JanusGraph%E7%B4%A2%E5%BC%95%E6%93%8D%E4%BD%9C%E9%9D%9E%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2. JanusGraph索引操作非事务操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%B4%A2%E5%BC%95%E6%93%8D%E4%BD%9C%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%9C%BA%E6%99%AF%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">3. 索引操作执行失败的场景总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-%E7%B4%A2%E5%BC%95%E5%B9%B6%E5%8F%91%E6%9B%B4%E6%96%B0%E6%97%B6%E9%94%81%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">3.1 索引并发更新时锁冲突</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-es%E6%9F%90%E6%97%B6%E9%97%B4%E6%AE%B5%E7%BC%96%E8%AF%91%E5%A4%A7%E9%87%8F%E8%84%9A%E6%9C%AC%E6%8A%A5%E9%94%99\"><span class=\"toc-text\">3.2 es某时间段编译大量脚本报错</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Rod","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/rodzrk/PicGoRepo/img/202310240007987.jpg","link":"/","description":"","socials":{"github":"https://github.com/rodzrk","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"elasticsearch scripting module","uid":"395e80b0d84ad157141ca4de3ba9bafc","slug":"elasticsearch-scripting-module","date":"2020-06-17T14:43:56.000Z","updated":"2020-08-02T14:00:00.000Z","comments":true,"path":"api/articles/elasticsearch-scripting-module.json","keywords":null,"cover":"https://pic.nas.rodzrk.cn:28443/i/2023/10/24/653762cf95402.jpg","text":"ES脚本模块API兼容性问题在ES的API中是支持脚本的,但是在早期的版本,部分的API版本变化相对比较频繁,因此在不同版本之间是可能存在兼容性问题的,这篇文章...","permalink":"/post/elasticsearch-scripting-module","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"elasticsearch","slug":"elasticsearch","count":1,"path":"api/categories/elasticsearch.json"}],"tags":[{"name":"elasticsearch","slug":"elasticsearch","count":1,"path":"api/tags/elasticsearch.json"}],"author":{"name":"Rod","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/rodzrk/PicGoRepo/img/202310240007987.jpg","link":"/","description":"","socials":{"github":"https://github.com/rodzrk","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}